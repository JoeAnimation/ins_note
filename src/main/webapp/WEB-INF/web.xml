<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>cloud_note</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <servlet>
	  <servlet-name>mvc</servlet-name>
	  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  <init-param>
	 	<param-name>contextConfigLocation</param-name>
	 	<param-value>classpath:conf/spring-*.xml</param-value>
	 </init-param>
	 <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!-- Log4j日志配置 -->
  <!--
  <context-param>
      <param-name>log4jConfigLocation</param-name>
      <param-value>classpath:property/log4j.properties</param-value>
  </context-param>
   
  <context-param>
      <param-name>log4jRefreshInterval</param-name>
      <param-value>10000</param-value>
  </context-param>
  
   <listener>
      <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
   -->
  <!-- 解决ajax同源策略跨域问题 -->
  <filter>
  	<filter-name>cors</filter-name>
    <filter-class>com.sicau.ins_note.filter.CrossDomainFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>cors</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
   
  <!-- log4j2日志配置 -->
  <context-param>
     <param-name>log4jConfigLocation</param-name>
     <param-value>classpath:log4j2.xml</param-value>
   </context-param>
   
  <listener>
     <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  </listener>
  <filter>
     <filter-name>log4jServletFilter</filter-name>
     <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
  </filter>
  <filter-mapping>
     <filter-name>log4jServletFilter</filter-name>
     <url-pattern>/*</url-pattern>
     <dispatcher>REQUEST</dispatcher>
     <dispatcher>FORWARD</dispatcher>
     <dispatcher>INCLUDE</dispatcher>
     <dispatcher>ERROR</dispatcher>
  </filter-mapping>
   
  <servlet-mapping>
	 <servlet-name>mvc</servlet-name>
	 <url-pattern>*.do</url-pattern>
  </servlet-mapping>
</web-app>